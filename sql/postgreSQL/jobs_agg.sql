SELECT jeditaskid,
      task_attemptnr,
      queue,
      cpuconsumptionunit,
      datasetname,
      status,
      regexp_replace(inputfiletype, '[[:digit:]]', '', 'g')                              as inputfiletype,
      split_part(regexp_replace(inputfiletype, '[[:digit:]]', '', 'g'), '_',
                 1)                                                                      as input_format_short,
      split_part(regexp_replace(inputfiletype, '[[:digit:]]', '', 'g'), '_',
                 2)                                                                      as input_format_desc,
      inputfileproject,
--       corecount,
--       actualcorecount,
      resource_type,
      atlasrelease,
      processingtype,
      transformation,
      homepackage,
      round(AVG(assignedpriority))                                                       as assigned_priority,
      round(AVG(currentpriority))                                                        as current_priority,
      round(AVG(hs06sec))                                                                as avg_hs06sec,
      SUM(nevents)                                                                       as sum_nevents,
      SUM(ninputdatafiles)                                                               as sum_ninputdatafiles,
      SUM(noutputdatafiles)                                                              as sum_noutputdatafiles,
      SUM(inputfilebytes)                                                                as sum_inputfilebytes,
      SUM(outputfilebytes)                                                               as sum_outputfilebytes,
      round(AVG(lib_size))                                                               as lib_size,
      MIN(execution_start_tstamp)                                                        as execution_start_tstamp,
      MAX(execution_end_tstamp)                                                          as execution_end_tstamp,
      MAX(completed_tstamp)                                                              as completed_tstamp,
      MIN(creation_tstamp)                                                               as creation_tstamp,
      round(AVG(waiting_time))                                                           as avg_waiting_time,
      round(AVG(execution_time))                                                         as avg_execution_time,
      round(AVG(cpuconsumptiontime))                                                     as avg_cpuconsumptiontime,
      round(AVG(cpuconsumptiontime) / nullif(AVG(execution_time),0), 2)                            as cpu_walltime_ratio,
      round(AVG(total_time))                                                             as avg_total_time,
      round(AVG(transferring_time))                                                      as avg_transferring_time,
      round(AVG(merging_time))                                                           as avg_merging_time,
      round(SUM(waiting_time * jobs_timings.inputfilebytes) / nullif(SUM(inputfilebytes),0))       as weighted_waiting_time,
      round(SUM(execution_time * jobs_timings.inputfilebytes) /
            nullif(SUM(inputfilebytes),0))                                                         as weighted_execution_time,
      round(SUM(cpuconsumptiontime * jobs_timings.inputfilebytes) /
            nullif(SUM(inputfilebytes),0))                                                         as weighted_cpuconsumptiontime,
      round(SUM(total_time * jobs_timings.inputfilebytes) / nullif(SUM(inputfilebytes),0))         as weighted_total_time,
      round(SUM(transferring_time * outputfilebytes) / nullif(SUM(outputfilebytes),0))             as weighted_transferring_time,
      round(SUM(merging_time * outputfilebytes) / nullif(SUM(outputfilebytes),0))                  as weighted_merging_time
FROM jobs_timings
WHERE
    completed_tstamp >= date_trunc('day', TIMESTAMP :from_date) - INTERVAL '1 day' and completed_tstamp < :from_date
GROUP BY jeditaskid, task_attemptnr, queue, cpuconsumptionunit, datasetname, status,
        regexp_replace(inputfiletype, '[[:digit:]]', '', 'g'),
        split_part(regexp_replace(inputfiletype, '[[:digit:]]', '', 'g'), '_', 1),
        split_part(regexp_replace(inputfiletype, '[[:digit:]]', '', 'g'), '_', 2),
        inputfileproject,
--         corecount,
--         actualcorecount,
        resource_type,
        atlasrelease,
        processingtype,
        transformation,
        homepackage